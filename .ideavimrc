" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set background=dark
set nocompatible
" set highlight Normal ctermfg=blue ctermbg=gray
" set highlight Normal ctermfg=grey ctermbg=black

" Uncomment the following to have Vim jump to the last position when
" reopening a file
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
" filetype plugin indent on

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set autowrite		" Automatically save before commands like :next and :make
set hidden		" Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)

"" Source a global configuration file if available
"if filereadable("/etc/vim/vimrc.local")
"  source /etc/vim/vimrc.local
"endif

inoremap jj <Esc>
inoremap aa <Esc>
set relativenumber
set number

let g:ycm_global_ycm_extra_conf="~/.vim/.ycm_extra_conf.py"

execute pathogen#infect()
syntax on
filetype plugin indent on
"set sts=4
"set ts=2
"set sw=8
" -----------------------------------------------------------------------------
"  " clang-format
"  "
"  -----------------------------------------------------------------------------
  let g:clang_format#code_style="llvm"
  let g:clang_format#style_options={
     \ "IndentWidth": 2,
     \ "Standard": "Cpp11",
     \ "AllowShortFunctionsOnASingleLine": "false",
     \ "AlwaysBreakTemplateDeclarations": "true",
     \ "AlignEscapedNewlinesLeft": "true",
     \ "ColumnLimit": 280,
     \ "SortIncludes": "false",
     \  }

" autocmd FileType c,cpp,objc nnoremap <buffer><leader>cf :<C-u>ClangFormat<CR>
" autocmd FileType c,cpp,objc vnoremap <buffer><leader>cf :ClangFormat<CR>
" autocmd FileType c,cpp,objc nmap <leader>C :ClangFormatAutoToggle<CR>

 "" jump to the previous function
 "nnoremap <silent> [[ :call
 "\ search('\(\(if\\|for\\|while\\|switch\\|catch\)\_s*\)\@64<!(\_[^)]*)\_[^;{}()]*\zs{',"bw")<CR>
 "" jump to the next function
 "nnoremap <silent> ]] :call
 colo gruvbox
 set encoding=utf-8
 let mapleader=","
 autocmd FileType h,hpp,c,cpp,objc nnoremap <buffer><leader>gl :YcmCompleter GoToDeclaration<CR>
 autocmd FileType h,hpp,c,cpp,objc nnoremap <buffer><leader>gk :YcmCompleter GoToDefinition<CR>
